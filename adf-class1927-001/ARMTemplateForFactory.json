{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-class1927-001"
		},
		"lsadls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsadls'"
		},
		"lssqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lssqldb'"
		},
		"lsadls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://saclass1adf.dfs.core.windows.net/"
		},
		"lshttp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://files.cdn.thinkific.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/plcopytosqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from adls to sql db",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_fname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_fname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_lname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_lname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_password",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_password",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_street",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_street",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_state",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_zipcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_zipcode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsCustomerSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dssqldbSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T07:54:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsCustomerSource')]",
				"[concat(variables('factoryId'), '/datasets/dssqldbSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pltask1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyfromhttp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dshttp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsadls",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T07:01:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dshttp')]",
				"[concat(variables('factoryId'), '/datasets/dsadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pltask2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "task2dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T07:10:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/task2dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pltask3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dftask3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customerdata": {},
									"ordersdata": {},
									"sinkasoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-08T08:16:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dftask3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsCustomerSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers-220425-192134.csv",
						"folderPath": "customerdata",
						"fileSystem": "task3input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "customer_fname",
						"type": "String"
					},
					{
						"name": "customer_lname",
						"type": "String"
					},
					{
						"name": "customer_email",
						"type": "String"
					},
					{
						"name": "customer_password",
						"type": "String"
					},
					{
						"name": "customer_street",
						"type": "String"
					},
					{
						"name": "customer_city",
						"type": "String"
					},
					{
						"name": "customer_state",
						"type": "String"
					},
					{
						"name": "customer_zipcode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsadls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "orders.csv",
						"folderPath": "task1output",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "order_customer_id",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dshttp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lshttp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "file_uploads/349536/attachments/c28/5fb/25b/orders.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "order_customer_id",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lshttp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsoutputsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "transformeddata",
						"fileSystem": "task3output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssqldbSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssqldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "varchar"
					},
					{
						"name": "customer_fname",
						"type": "varchar"
					},
					{
						"name": "customer_lname",
						"type": "varchar"
					},
					{
						"name": "customer_email",
						"type": "varchar"
					},
					{
						"name": "customer_password",
						"type": "varchar"
					},
					{
						"name": "customer_street",
						"type": "varchar"
					},
					{
						"name": "customer_city",
						"type": "varchar"
					},
					{
						"name": "customer_state",
						"type": "varchar"
					},
					{
						"name": "customer_zipcode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lssqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dstask2adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "transformeddata.csv",
						"folderPath": "task2output",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsadls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsadls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsadls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lshttp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('lshttp_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lssqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('lssqldb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dftask3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dssqldbSink",
								"type": "DatasetReference"
							},
							"name": "customerdata"
						},
						{
							"dataset": {
								"referenceName": "dsadls",
								"type": "DatasetReference"
							},
							"name": "ordersdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsoutputsink",
								"type": "DatasetReference"
							},
							"name": "sinkasoutput"
						}
					],
					"transformations": [
						{
							"name": "innerjoin"
						},
						{
							"name": "select"
						},
						{
							"name": "filtercity"
						},
						{
							"name": "sortbyfname"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          customer_fname as string,",
						"          customer_lname as string,",
						"          customer_email as string,",
						"          customer_password as string,",
						"          customer_street as string,",
						"          customer_city as string,",
						"          customer_state as string,",
						"          customer_zipcode as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> customerdata",
						"source(output(",
						"          order_id as string,",
						"          order_date as string,",
						"          order_customer_id as string,",
						"          order_status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ordersdata",
						"customerdata, ordersdata join(customer_id == order_customer_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> innerjoin",
						"innerjoin select(mapColumn(",
						"          customer_id,",
						"          customer_fname,",
						"          customer_lname,",
						"          customer_street,",
						"          customer_city,",
						"          customer_state,",
						"          customer_zipcode,",
						"          order_id,",
						"          order_date,",
						"          order_status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select",
						"select filter(customer_city == \"Caguas\") ~> filtercity",
						"filtercity sort(asc(customer_fname, true)) ~> sortbyfname",
						"sortbyfname sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['task3transformeddata.csv'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkasoutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dssqldbSink')]",
				"[concat(variables('factoryId'), '/datasets/dsadls')]",
				"[concat(variables('factoryId'), '/datasets/dsoutputsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/task2dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsadls",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dstask2adls",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "select"
						},
						{
							"name": "groupby"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as string,",
						"          order_date as string,",
						"          order_customer_id as string,",
						"          order_status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          order_id,",
						"          customer_id = order_customer_id,",
						"          order_status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select",
						"select aggregate(groupBy(order_status),",
						"     count_of_orders_status = count(order_id)) ~> groupby",
						"groupby sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['transformed_data.csv'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsadls')]",
				"[concat(variables('factoryId'), '/datasets/dstask2adls')]"
			]
		}
	]
}